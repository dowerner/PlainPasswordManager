<Window x:Class="PlainPasswordManager.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PlainPasswordManager"
        xmlns:converter="clr-namespace:PlainPasswordManager.ViewModel.Converter"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="468" Width="788">
    <Window.InputBindings>
        <KeyBinding Command="{Binding SaveCommand}" Key="S" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding AddEntryCommand}" Key="A" Modifiers="Ctrl"/>
    </Window.InputBindings>
    <Window.Resources>
        <converter:EnumBooleanConverter x:Key="EnumBooleanConverter" />
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="White"></Setter>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="LightGray"></Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Focusable" Value="False"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="28" />
            <RowDefinition Height="{Binding SortingRowHeight}" />
            <RowDefinition Height="{Binding FilterRowHeight}" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal">
            <Menu Margin="2">
                <MenuItem Command="{Binding AddEntryCommand}" ToolTip="Add entry (CTRL+A)" Header="Add"/>
                <MenuItem Command="{Binding SaveCommand}" ToolTip="Save changes (CTRL+S)" Header="Save"/>
                <MenuItem Command="{Binding OpenSettingsCommand}" ToolTip="Open Settings Window" Header="Settings"/>
                <MenuItem Command="{Binding ChangeMasterPasswordCommand}" ToolTip="Set a new Master Password and re-encrypt all passwords." Header="Change Master Password"/>
                <MenuItem Header="?">
                    <MenuItem Command="{Binding OpenHelpCommand}" Header="Help"/>
                    <MenuItem Command="{Binding OpenAboutCommand}" Header="About"/>
                </MenuItem>
            </Menu>
            <Expander Grid.Row="1" Header="Sorting" IsExpanded="{Binding ShowSorting}" />
            <Expander Grid.Row="1" Header="Search" IsExpanded="{Binding ShowFilters}" />
        </StackPanel>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <TextBlock Text="Order By:" Margin="5,0,0,0"/>
            <RadioButton IsChecked="{Binding Path=SortedBy, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Id}" Margin="5,0,5,0" Content="Id"/>
            <RadioButton IsChecked="{Binding Path=SortedBy, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Title}" Margin="5,0,5,0" Content="Title"/>
            <RadioButton IsChecked="{Binding Path=SortedBy, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=UserName}" Margin="5,0,5,0" Content="Username"/>
            <RadioButton IsChecked="{Binding Path=SortedBy, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Url}" Margin="5,0,5,0" Content="Url"/>
            <RadioButton IsChecked="{Binding Path=SortedBy, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=ProvidedName}" Margin="5,0,5,0" Content="Provided Name"/>
            <RadioButton IsChecked="{Binding Path=SortedBy, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Address}" Margin="5,0,5,0" Content="Address"/>
            <RadioButton IsChecked="{Binding Path=SortedBy, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Email}" Margin="5,0,5,0" Content="Email"/>
            <CheckBox IsChecked="{Binding SortDescending}" Margin="10,0,0,0" Content="Descending" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="2">
            <TextBlock Height="16" Margin="5,0,10,0" Text="Search:"/>
            <TextBox Height="24" MinWidth="200" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />
            <Button Command="{Binding ResetSearchCommand}" Height="24" Width="24" Margin="5,0,0,0" Content="X" />
        </StackPanel>
        <ListBox Focusable="False" Grid.Row="3" x:Name="ItemsView"
                 ItemsSource="{Binding CredentialEntries}"
                 ScrollViewer.CanContentScroll="False"
                 AlternationCount="2"
                 VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                 VirtualizingPanel.IsContainerVirtualizable="True">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Visibility="{Binding VisibleByFilter, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="28"/>
                            <RowDefinition Height="28"/>
                            <RowDefinition Height="28"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding Id}" Grid.Column="0" Margin="0,0,10,0" Grid.RowSpan="3" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBlock Text="Title:" VerticalAlignment="Center" Grid.Column="1" />
                        <TextBox Grid.Column="2" VerticalAlignment="Center" MinWidth="80" Text="{Binding Title, Mode=TwoWay}" />
                        <TextBlock Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Text="Username:" />
                        <TextBox Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" MinWidth="80" Text="{Binding UserName, Mode=TwoWay}" />
                        <TextBlock Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" Text="Password:" />
                        <Grid Grid.Column="2" Grid.Row="2" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Margin="0,0,5,0" MinWidth="80" Text="{Binding Password}" IsReadOnly="True" />
                            <Button Grid.Column="1" Command="{Binding SetEntryPasswordCommand}" Content="Change" />
                        </Grid>
                        <CheckBox Margin="5,0,5,0" Grid.Column="3" Grid.Row="2" Content="Show" VerticalAlignment="Center" IsEnabled="{Binding ShowPasswordEnabled}" IsChecked="{Binding ShowPassword, Mode=TwoWay}"/>
                        <TextBlock Grid.Column="4" VerticalAlignment="Center" Text="Url:" />
                        <TextBox Grid.Column="5" Grid.ColumnSpan="3" VerticalAlignment="Center" MinWidth="280" Text="{Binding Url, Mode=TwoWay}" />
                        <TextBlock Grid.Row="1" Grid.Column="4" Margin="0,0,5,0" VerticalAlignment="Center" Text="Name in Account:" />
                        <TextBox Grid.Row="1" Grid.Column="5" VerticalAlignment="Center" MinWidth="80" Text="{Binding ProvidedName, Mode=TwoWay}" />
                        <TextBlock Grid.Column="4" Grid.Row="2" VerticalAlignment="Center" Text="Email:" />
                        <TextBox Grid.Column="5" Grid.Row="2" VerticalAlignment="Center" MinWidth="80" Text="{Binding Email, Mode=TwoWay}" />
                        <TextBlock Grid.Column="6" Grid.Row="1" Margin="5,0,0,0" VerticalAlignment="Center" Text="Address:" />
                        <TextBox Grid.Column="7" Grid.Row="1" VerticalAlignment="Center" MinWidth="80" HorizontalAlignment="Stretch" Text="{Binding AddressData, Mode=TwoWay}" />
                        <Button Grid.Column="8" Grid.RowSpan="3" Margin="5,0,0,0" VerticalAlignment="Center" Command="{Binding RemoveCredentialCommand}" CommandParameter="{Binding}" Content="Remove"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
